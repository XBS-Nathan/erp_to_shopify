parameters:
    erp.shopify.config:
        product_limit: %shopify_product_limit%

services:

    erp.command.updateCatalog:
        class: ERPBundle\Commands\UpdateCatalog
        arguments: [@erp.services.shopifyStore, @old_sound_rabbit_mq.product_producer]
        tags:
            -  { name: console.command }

    erp.command.collecShipment:
        class: ERPBundle\Commands\CollectShipments
        arguments: [@erp.services.shopifyStore, @erp.client.shopifywrapper, @old_sound_rabbit_mq.product_producer]
        tags:
            -  { name: console.command }

    erp.product_consumer:
        class: ERPBundle\Consumer\ProductConsumer
        arguments:
            - @erp.client.erp
            - @erp.services.productCatalog
            - @erp.services.shopifystore

    erp.shipment_consumer:
        class: ERPBundle\Consumer\ShipmentConsumer
        arguments:
            - @erp.client.erp
            - @erp.services.erpshipment
            - @erp.services.shopifystore
            - @erp.client.shopifywrapper

    erp.client.erp:
        class: ERPBundle\Services\Client\ErpClient
        arguments:
            - @erp.guzzle.client.erp
            - %kernel.logs_dir%

    erp.client.shopifyWrapper:
        class: ERPBundle\Services\Client\ShopifyApiClientWrapper
        arguments:
            - @erp.guzzle.client.shopify

    erp.services.shopifyStore:
        class: ERPBundle\Services\ShopifyStoreService
        arguments:
            - @erp.repository.catalog
            - @erp.repository.store

    erp.services.erpshipment:
        class: ERPBundle\Services\ErpShipmentService


    erp.services.productCatalog:
        class: ERPBundle\Services\ProductCatalogService
        arguments:
            - @erp.client.shopifyWrapper
            - @erp.options.shopify
            - @erp.repository.skuToProduct
            - @erp.repository.catalog
            - @erp.repository.store

    erp.guzzle.client.erp:
        class: GuzzleHttp\Client

    erp.guzzle.client.shopify:
        class: ERPBundle\Factory\Client\ShopifyApiClientFactory
        arguments: [%kernel.logs_dir%]

    erp.options.shopify:
        class: ERPBundle\Options\ShopifyOptions
        arguments: ["%erp.shopify.config%"]

    erp.repository.skuToProduct:
          class: Doctrine\ORM\EntityRepository
          factory_service: doctrine.orm.default_entity_manager
          factory_method: getRepository
          arguments:
              - ERPBundle\Entity\SkuToProductEntity

    erp.repository.catalog:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - ERPBundle\Entity\CatalogEntity

    erp.repository.event:
        class: Doctrine\ODM\DocumentRepository
        factory_service: doctrine.odm.mongodb.document_manager
        factory_method: getRepository
        arguments:
            - ERPBundle\Document\Event

    erp.repository.store:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - ERPBundle\Entity\StoreEntity

    erp.shopify.event.retriver:
        class: ERPBundle\Webhook\ShopifyEventRetriever
        arguments: [@erp.repository.event]

    erp.handler.createOrder:
        class: ERPBundle\Webhook\Handler\CreateOrderHandler
        arguments:
            - @erp.client.erp
            - @erp.client.shopifywrapper


    erp.handlerFactory:
        class: ERPBundle\Webhook\Factory\HandlerFactory
        arguments:
            - @erp.handler.createOrder

    erp.shopify.commandFactory:
        class: ERPBundle\Webhook\Factory\ShopifyCommandFactory


    erp.controller.webhook:
        class: ERPBundle\Controller\WebHookController
        arguments:
            - @monolog.logger.webhook
            - @erp.shopify.event.retriver
            - @erp.handlerFactory
            - @erp.shopify.commandFactory
            - @erp.services.shopifystore
            - @erp.repository.event